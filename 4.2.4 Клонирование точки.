//Copy - это что-то типа Cloneable, я написала Copy для других задач, нужно использовать Cloneable для переопределения Object clone()


package ru.kosheleva.main;

public interface Copy extends Cloneable{
    Copy clone();
}



package ru.kosheleva.geometry;

import ru.kosheleva.main.Copy;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


import ru.kosheleva.main.Copy;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

public class Point implements Copy {
    protected int x;
    protected int y;

    public Point() {

    }

    private List<Property> props = new ArrayList<>();

    public Point(int x, int y) {
        this.x = x;
        this.y = y;
    }

    public List<Property> getProps() {
        return this.props;
    }

    public int getX() {
        return x;
    }

    public int getY() {
        return y;
    }

    public void setX(int x) {
        this.x = x;
    }

    public void setY(int y) {
        this.y = y;
    }

    @Override
    public String toString() {
        return "{" + x + ";" + y + "}";
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        Point point = (Point) o;
        return x == point.x && y == point.y;
    }

    @Override
    public int hashCode() {
        return Objects.hash(x, y);
    }

    @Override
    public Point clone() {
        try {
            Point point = (Point) super.clone();
            return point;
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }
    }

}



public class Main {

    public static void main(String[] args) throws CloneNotSupportedException {
        
        Point point = new Point(2,3);
        Point pointClone = point.clone();
        System.out.println(point);
        System.out.println(pointClone);
        pointClone.setX(7);
        System.out.println(point);
        System.out.println(pointClone);

    }

}
