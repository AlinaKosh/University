public class Square {
    private int side;
    private final Point point;

    public Square(int side, Point point) {
        if (side<=0) throw new IllegalArgumentException("Неправильно задана длина стороны");
        this.side = side;
        this.point = point;
    }

    public void setSide(int side) {
        if (side<=0) throw new IllegalArgumentException("Неправильно задана длина стороны");
        else this.side = side;
    }

    public int getSide() {
        return side;
    }

    public NewLine getBroken() {
        Point point11 = new Point(this.point.x, this.point.y);
        Point point2 = new Point(this.point.x + side, this.point.y);
        Point point3 = new Point(this.point.x + side, side + this.point.y);
        Point point4 = new Point(this.point.x, side + this.point.y);
        return new NewLine(this.point, point2, point3, point4, point11);
    }

}




import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class NewLine {
    public List<Point> pointsNewLine = new ArrayList<>();

    public NewLine(Point... points){
        this.pointsNewLine.addAll(Arrays.asList(points)); //Метод возвращает список фиксированного размера, поддерживаемый указанным массивом
    //Поскольку массив не может быть структурно изменен, нельзя добавлять элементы в список или удалять элементы из него.
    //Поскольку у нас принимается массив точек мы переделываем через Arrays
    }

    public void addPointsForCondition(Point...points){
        pointsNewLine.addAll(Arrays.asList(points));
    }
    public double getLength(){
        double length = 0.0;
        for (int i = 0; i < pointsNewLine.size() - 1; i++) {
            double sizeX = (pointsNewLine.get(i+1).x - pointsNewLine.get(i).x) * (pointsNewLine.get(i+1).x - pointsNewLine.get(i).x);
            double sizeY = (pointsNewLine.get(i+1).y - pointsNewLine.get(i).y) * (pointsNewLine.get(i+1).y - pointsNewLine.get(i).y);
            length += Math.sqrt(sizeX + sizeY);
        }
        return length;
    }

    @Override
    public String toString() {
        return "NewLine{" +
                "pointsNewLine=" + pointsNewLine +
                '}';
    }
}



public class Main1 {

    public static void main(String[] args) {
    
        Square square = new Square(23, new Point(5,3));
        square.setSide(36);//если задаём отрицательное значение, то выплывает ошибка
        System.out.println(square.getSide());
        NewLine newLine = square.getBroken();
        System.out.println(newLine.getLength());
        newLine.pointsNewLine.set(newLine.pointsNewLine.size() - 1, new Point(15,25));
        System.out.println(newLine.getLength());
        
      }
   }
